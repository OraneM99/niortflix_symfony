<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>{% block title %}SeriesTime | Home{% endblock %}</title>

    <link rel="icon" type="image/png" href="{{ asset('images/logo.svg') }}">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <link rel="stylesheet" href="{{ asset('/assets/css/navbar.css') }}?v={{ 'now'|date('U') }}">

    {% block stylesheets %}
        <style>
            header, .navbar, .nx { position: sticky; top: 0; z-index: 2000; overflow: visible; }

            main, .panel, .series-hero, .card-show {
                position: relative;
                z-index: 1;
            }
        </style>
    {% endblock %}
</head>

<body class="d-flex flex-column min-vh-100 {% block body_class %}{% endblock %}">
<header>
    {% for status, messages in app.flashes %}
        {% for message in messages %}
            <div class="alert alert-{{ status }} mb-0 rounded-0">{{ message }}</div>
        {% endfor %}
    {% endfor %}

    {% include('_navbar.html.twig') %}
</header>

<main class="flex-grow-1">
    <div class="container my-4">
        {% block body %}{% endblock %}
    </div>
</main>

{# Modal global pour afficher dynamiquement le détail d'une série #}
<div class="modal fade" id="serieModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content"
             style="background: var(--panel-alpha, rgba(34,37,41,.78));
                border:1px solid rgba(255,255,255,.12);
                border-radius: var(--radius-m, 10px);">
            <!-- contenu injecté dynamiquement -->
        </div>
    </div>
</div>

<footer class="mt-auto"></footer>

{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" defer></script>

    <script>
        // Ouvrir/fermer l'input de recherche
        document.addEventListener('click', (e) => {
            const wrap = document.querySelector('.nx-search');
            const btn = e.target.closest('.js-nx-search-btn');
            if (btn && wrap){
                wrap.classList.toggle('is-open');
                const input = wrap.querySelector('.nx-search-input');
                if (wrap.classList.contains('is-open')) input.focus();
                return;
            }
            if (wrap && !e.target.closest('.nx-search')) wrap.classList.remove('is-open');
        });
    </script>

    <script>
        // Ouvrir le détail en modal
        document.addEventListener('click', async (e) => {
            const a = e.target.closest('.js-open-detail');
            if (!a) return;
            e.preventDefault();

            const url = a.getAttribute('href');
            const modal = document.getElementById('serieModal');
            const content = modal.querySelector('.modal-content');
            content.innerHTML = '<div class="p-4 text-center text-muted">Chargement…</div>';

            try {
                const res = await fetch(url + (url.includes('?') ? '&' : '?') + 'partial=1', {
                    headers: { 'X-Requested-With': 'XMLHttpRequest' }
                });
                content.innerHTML = await res.text();

                // <<< fade-in du hero (évite le flash blanc)
                requestAnimationFrame(() => {
                    content.querySelectorAll('.series-hero').forEach(el => el.classList.add('is-ready'));
                });
            } catch (err) {
                content.innerHTML = '<div class="p-4 text-danger">Erreur de chargement.</div>';
            }

            bootstrap.Modal.getOrCreateInstance(modal).show();
        });

        // Nettoyage backdrop pour éviter qu’il bloque les clics
        document.addEventListener('hidden.bs.modal', (e) => {
            if (e.target.id !== 'serieModal') return;
            document.body.classList.remove('modal-open');
            document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
        });
    </script>

    {% block importmap %}{{ importmap('app') }}{% endblock %}
{% endblock %}
</body>
</html>
